################################################################################
# ~~~~~~~~~~~~~~~~~~~~~~~~  AUTOCREATED WITH KIAUH  ~~~~~~~~~~~~~~~~~~~~~~~~~~ #
################################################################################
# Recommended macros and config entries if you use Mainsail or Fluidd!         #
# You can edit or delete those macros if you already defined them elsewhere!   #
################################################################################

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME



[gcode_macro PRIME_LINE]
gcode:
  M117 Linha de purga
  G92 E0
  G1 Z2.0 F3000
  G1 X1 Y30 Z0.28 F5000.0
  G1 X1 Y200.0 Z0.28 F1500.0 E15
  G1 X2 Y200.0 Z0.28 F5000.0
  G1 X2 Y50 Z0.28 F1500.0 E30
  G92 E0
  G1 Z2.0 F3000



[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
  M117 Homing
  G4 P2000
  G90
  #SET_GCODE_OFFSET Z=0.0
  G28
  BED_MESH_PROFILE LOAD=default
  G1 X15 Y20 Z5 F6000
  M117 Espera temperaturas
  M140 S{BED_TEMP}
  {% if printer.heater_bed.temperature > params.BED_TEMP|float*100 %}
      M140 S{BED_TEMP}
      M109 S{EXTRUDER_TEMP}
      M190 S{BED_TEMP}
  {% else %}
      M190 S{params.BED_TEMP|float*0.90}
      M109 S{EXTRUDER_TEMP}
      M190 S{BED_TEMP}
  {% endif %}
  M117 Nivelar mesa
  BED_MESH_CALIBRATE
  PRIME_LINE
  M117 A Imprimir...


[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84


[gcode_macro G29]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z10 F6000
    BED_MESH_PROFILE save=default
    SAVE_CONFIG


#[filament_switch_sensor Filament_runout_sensor]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
 # G91
  #G1 Z20 F900      ;Raise Z away from print
  #G90
  #G1 X10 Y10 F5000 ;Move to purge bucket
  #G91
  #G1 E10 F300
  #G1 E20 F150
  #G1 E-20 F2400
  #G1 E-600 F1600
  #G90
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin: !PA4
#   The pin on which the switch is connected. This parameter must be
#   provided.

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

  [gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}



[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE


  [gcode_macro _TIMELAPSE_NEW_FRAME]
gcode:
 {action_call_remote_method("timelapse_newframe")}
 ; leave this in a separate macro!

[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
  G10
  SAVE_GCODE_STATE NAME=SNAPSHOT
  G1 X175.0 F10000
  G1 Y100.0 F10000
  G4 P500 ;dwell
  M400    ;clear buffer
  _TIMELAPSE_NEW_FRAME
  G4 P250 ;moar dwelling
  M400
  RESTORE_GCODE_STATE NAME=SNAPSHOT MOVE=1
  G11

[gcode_macro SCREWS_CALCULATE]
gcode:
  SCREWS_TILT_CALCULATE  

[gcode_macro TIMELAPSE_RENDER]
gcode:
  {action_call_remote_method("timelapse_render")}


[gcode_macro CHANGE_FILAMENT]
variable_enabled: 0
gcode:
	{% if printer["gcode_macro CHANGE_FILAMENT"].enabled %}
		PAUSE
		PARK
		G91
		G1 E-100 F1000
		M117 Change Filament
		PLAY_ANNOYING_BEEPS
	{% endif %}
	SET_GCODE_VARIABLE MACRO=CHANGE_FILAMENT VARIABLE=enabled VALUE=0

[gcode_macro M600]
gcode:
	SET_GCODE_VARIABLE MACRO=CHANGE_FILAMENT VARIABLE=enabled VALUE=1
	{% if printer.virtual_sdcard.progress %}
		CHANGE_FILAMENT
	{% else %}
		{printer.gcode.action_respond_info("action:pause")}
	{% endif %}


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.005000, 0.007500, -0.053750, -0.077500, -0.108750
#*# 	  0.038750, -0.007500, -0.081250, -0.117500, -0.165000
#*# 	  0.030000, -0.011250, -0.120000, -0.185000, -0.262500
#*# 	  0.023750, -0.048750, -0.157500, -0.235000, -0.325000
#*# 	  -0.030000, -0.082500, -0.216250, -0.308750, -0.422500
#*# tension = 0.2
#*# min_x = 35.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 35.0
#*# x_count = 5
#*# max_y = 180.0
#*# mesh_x_pps = 2
#*# max_x = 175.0









################################################################################
################################################################################
